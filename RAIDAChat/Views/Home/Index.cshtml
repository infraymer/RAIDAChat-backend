<div class="row">
    <div class="col-xs-6">
        <h1><small>Проверка подключения к серверу</small></h1><br />
        <span>Состояние: <span class="label" id="infoConnect"></span></span><br /><br />
        <input class="btn btn-primary" value="Подключиться" type="button" id="btn_conect" />
        <input class="btn btn-warning" value="Отключиться" type="button" id="btn_disconnect" />
    </div>
    <div class="col-xs-6">
        <h1><small>Сервер</small></h1><br />
        <span>Состояние: <span class="label alert-info" id="ServPort">Неизвестно</span></span><br /><br />
        <input class="btn btn-primary" value="Открыть порт" type="button" id="btn_serv" />
        <input class="btn btn-danger" value="Закрыть порт" type="button" id="btn_closeserv" />
    </div>
</div>
<hr />
<div class="row">
    <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
        Инфо о пользователях и группах
    </button>
    <div class="collapse" id="collapseExample">
        <div class="col-xs-6">
            <h1><small>Зарег. пользователи</small></h1><br />
            @foreach (var us in ViewBag.users)
            {
                <div class="well">
                    <i>public_id (login): </i>@us.Key <br />
                    <i>an: </i>@us.Value
                </div>
            }
        </div>
        <div class="col-xs-6">
            <h1><small>Группы</small></h1><br />
            @foreach (var us in ViewBag.groups)
            {
                <div class="well">
                    <i>Название: </i>@us.Value<br />
                    <i>public_id: </i>@us.Key
                </div>
            }
        </div>
    </div>
</div>
<hr />
<div class="row">
    <br />
    <div class="col-xs-6">
        <textarea class="form-control" rows="15"  id="message" placeholder="Строка запроса"></textarea><br />
        <input class="btn btn-success pull-right" type="button" value="Отправить" id="send" >
    </div>
    <div class="col-xs-6">
        <div class="well">
            <pre>
Для того чтобы получать ответ от сервера, необходимо подписаться на рассылку:
{
    "execFun": "authorization",
    "data": {
        "login": "public_id",
        "an": "user AN"
    }
}

Остальные запросы в соостветствии с описанным <a href="https://trello.com/c/590NmVVp/8-api-prototype">API</a> 
            </pre>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">               
                <span class="label label-info ">Ответ:</span>
                <button type="button" class="btn btn-danger btn-sm pull-right" style="margin-top:-5px" id="clean">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Clean
                </button>
            </div>
            <div class="panel-body" id="messages">
            </div>
        </div>       
    </div>
    @Scripts.Render("~/bundles/jquery")
</div>


<script type="text/javascript">
    var socket,
        $txt = document.getElementById('message'),
        $messages = document.getElementById('messages'),

        //socketConnect = "ws://192.168.0.102:49011",
        //detinServ = "http://192.168.0.102:8080/raidachat/api/openConnect";

        //socketConnect = "ws://5.141.98.216:49011",
        //detinServ = "http://5.141.98.216:49001/rcn1/api/openConnect"; 

        socketConnect = "ws://5.141.98.216:49012",
        detinServ = "http://5.141.98.216:49001/rcn2/api/openConnect"; 

        reConnect()
        
    function reConnect() {
       
        if (typeof (WebSocket) !== 'undefined') {
            socket = new WebSocket(socketConnect);
        } else {
            socket = new MozWebSocket(socketConnect);
        }

        socket.onmessage = function (msg) {
            var $el = document.createElement('p');
            $el.innerHTML = '<div class="well">' + msg.data + '</div>';

            $('#messages').prepend($el);
        };

        socket.onopen = function (event) {
            $('#infoConnect').html('Подключен')
            $('#infoConnect').addClass('label-success')
            $('#infoConnect').removeClass('label-danger')
            $('#btn_conect').attr('disabled', 'disabled')
            $('#btn_disconnect').removeAttr('disabled')
        };

        socket.onclose = function (event) {
            $('#infoConnect').html('Сервер не доступен')
            $('#infoConnect').removeClass('label-success')
            $('#infoConnect').addClass('label-danger')
            $('#btn_conect').removeAttr('disabled')
            $('#btn_disconnect').attr('disabled', 'disabled')
        };
    }

    function openPort() {
        $.ajax({
            url: detinServ,
            complete: function (response, status) {
                console.log(response)
                $('#ServPort').html(status)
            } 
        })   
    }
       

    $('#btn_serv').click(function () {
        openPort();
    });

    $('#btn_closeserv').click(function () {
        socket.send('{  "execFun": "closesocket","data": { }}');
    });
   

    document.getElementById('send').onclick = function () {
        socket.send($txt.value);
        $txt.value = '';
    };

    $('#clean').click(function () {
        $messages.innerHTML = "";
    });

    $('#btn_conect').click(function () {
        reConnect();
    });

    $('#btn_disconnect').click(function () {
        if (socket !== undefined) {
            socket.close();
        }
    });
    

</script>



